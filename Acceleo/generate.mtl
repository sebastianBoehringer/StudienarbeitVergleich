[comment encoding = UTF-8 /]
[module generate('http://www.eclipse.org/uml2/5.0.0/UML')]


[template public generateElement(aClass : Class)]
[comment @main/]
[if (aClass.oclIsTypeOf(Class))]
[file (aClass.classFileName(), false, 'UTF-8')]
package [aClass.containingPackages().name->sep('.')/]
public class [aClass.name.toUpperFirst()/][if aClass.general->notEmpty()] extends [for (c : Classifier | aClass.general) separator(', ')][c.name/][/for][/if] {

	[for (p: Property | aClass.attribute) separator('\n')]
	private [p.type.name/] [p.name/];
	[/for]
 
	[for (p: Property | aClass.attribute) separator('\n')]
	public [p.type.name/] get[p.name.toUpperFirst()/](){
		return this.[p.name/];
	[/for]

	[for (p: Property | aClass.attribute) separator('\n')]
	public void set[p.name.toUpperFirst()/]([p.type.name/] [p.name/]){
		this.[p.name/] = [p.name/];
	}
	[/for]

	[for (o: Operation | aClass.ownedOperation) separator('\n')]
	[o.visibility/] [if (o.type <> null)][o.type.name/][/if][if (o.type = null)]void[/if] [o.name/]([for (p: Parameter | o.ownedParameter) separator(', ')][p.type.name/] [p.name/][/for]){
		throw new UnsupportedOperationException();
	}
	[/for]
}
[/file]
[/if]
[/template]

[query public classFileName (aClass : Class) : String = 
aClass.qualifiedName().replaceAll('\\.','/').concat('.java')
/]

[query public qualifiedName (aClass : Class) : String = 
aClass.containingPackages().name->sep('.')->including('.')->including(aClass.name)->toString()
/]

[query public containingPackages (aClass : Class) : Sequence(Package) = 
aClass.ancestors()->reject(oclIsKindOf(Model))->reverse()
/]

